"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toEDNStringFromSimpleObject = exports.toEDNString = exports.toSymbol = exports.toKeyword = exports.tagValue = void 0;
const isEDNKeyword = (value) => {
    return value.key !== undefined;
};
const isEDNSymbol = (value) => {
    return value.sym !== undefined;
};
const isEDNMap = (value) => {
    return value.map !== undefined;
};
const isEDNSet = (value) => {
    return value.set !== undefined;
};
const isEDNList = (value) => {
    return value.list !== undefined;
};
const isEDNTaggedVal = (value) => {
    return value.tag !== undefined;
};
const isEDNChar = (value) => {
    return value.char !== undefined;
};
// TODO: Tag has char restrictions
exports.tagValue = (tag, value) => {
    return { tag, val: value };
};
// TODO: Keyword has char restrictions
exports.toKeyword = (value) => {
    return { key: value };
};
// TODO: Symbol has char restrictions
exports.toSymbol = (value) => {
    return { sym: value };
};
exports.toEDNString = (value) => {
    if (typeof value === 'string') {
        return JSON.stringify(value);
    }
    if (Array.isArray(value)) {
        return `[${value.map(exports.toEDNString).join(' ')}]`;
    }
    if (typeof value === 'number') {
        return value.toString();
    }
    if (typeof value === 'boolean') {
        return JSON.stringify(value);
    }
    if (value === null) {
        return 'nil';
    }
    if (value instanceof Date) {
        return `#inst "${value.toISOString()}"`;
    }
    if (typeof value === 'bigint') {
        return `${value}N`;
    }
    if (value instanceof Map) {
        return `{${[...value]
            .map(([k, v]) => `${exports.toEDNString(k)} ${exports.toEDNString(v)}`)
            .join(' ')}}`;
    }
    if (value instanceof Set) {
        return `#{${[...value].map(exports.toEDNString).join(' ')}}`;
    }
    if (isEDNMap(value)) {
        return `{${value.map
            .map(([k, v]) => `${exports.toEDNString(k)} ${exports.toEDNString(v)}`)
            .join(' ')}}`;
    }
    if (isEDNSet(value)) {
        return `#{${value.set.map(exports.toEDNString).join(' ')}}`;
    }
    if (isEDNKeyword(value)) {
        return `:${value.key}`;
    }
    if (isEDNSymbol(value)) {
        return value.sym;
    }
    if (isEDNList(value)) {
        return `(${value.list.map(exports.toEDNString).join(' ')})`;
    }
    if (isEDNTaggedVal(value)) {
        return `#${value.tag} ${exports.toEDNString(value.val)}`;
    }
    if (isEDNChar(value)) {
        return `\\${value.char}`;
    }
    throw new TypeError(`Unknown type: ${JSON.stringify(value)}`);
};
exports.toEDNStringFromSimpleObject = (value, options = { keysAs: 'keyword' }) => {
    if (typeof value === 'string') {
        return JSON.stringify(value);
    }
    if (Array.isArray(value)) {
        return `[${value
            .map((v) => exports.toEDNStringFromSimpleObject(v, options))
            .join(' ')}]`;
    }
    if (typeof value === 'number') {
        return value.toString();
    }
    if (typeof value === 'boolean') {
        return JSON.stringify(value);
    }
    if (value === null) {
        return 'nil';
    }
    if (value instanceof Date) {
        return `#inst "${value.toISOString()}"`;
    }
    if (typeof value === 'bigint') {
        return `${value}N`;
    }
    if (value instanceof Map) {
        return `{${[...value]
            .map(([k, v]) => `${exports.toEDNStringFromSimpleObject(k, options)} ${exports.toEDNStringFromSimpleObject(v, options)}`)
            .join(' ')}}`;
    }
    if (value instanceof Set) {
        return `#{${[...value]
            .map((v) => exports.toEDNStringFromSimpleObject(v, options))
            .join(' ')}}`;
    }
    if (typeof value === 'object') {
        return `{${Object.entries(value)
            .map(([k, v]) => `${options.keysAs === 'string' ? JSON.stringify(k) : `:${k}`} ${exports.toEDNStringFromSimpleObject(v, options)}`)
            .join(' ')}}`;
    }
    throw new TypeError(`Unknown type: ${JSON.stringify(value)}`);
};
